---
source: aml-syntax/src/expressions.rs
expression: parse(input)
---
List:
  original: "[1 + 12 * a b c - 13]"
  items:
    - Binary:
        original: 1 + 12 * a
        lhs:
          Primitive:
            original: "1"
            value:
              Int: 1
            location:
              start_byte: 1
              end_byte: 2
        rhs:
          Binary:
            original: 12 * a
            lhs:
              Primitive:
                original: "12"
                value:
                  Int: 12
                location:
                  start_byte: 5
                  end_byte: 7
            rhs:
              Ident:
                value: a
                location:
                  start_byte: 10
                  end_byte: 11
            op: Mul
            location:
              start_byte: 5
              end_byte: 11
        op: Plus
        location:
          start_byte: 1
          end_byte: 11
    - Ident:
        value: b
        location:
          start_byte: 12
          end_byte: 13
    - Binary:
        original: c - 13
        lhs:
          Ident:
            value: c
            location:
              start_byte: 14
              end_byte: 15
        rhs:
          Primitive:
            original: "13"
            value:
              Int: 13
            location:
              start_byte: 18
              end_byte: 20
        op: Minus
        location:
          start_byte: 14
          end_byte: 20
  location:
    start_byte: 0
    end_byte: 21
